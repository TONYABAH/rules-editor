{"version":3,"file":"rules-editor.esm.js","sources":["../src/ace-wrapper.js","../src/engine-wrapper.js","../src/default_highlight_rules.js","../src/default_fold.js","../src/debounce.js","../src/default_mode.js","../src/resource_highlight_rules.js","../src/resource_fold.js","../src/resource_mode.js","../src/dynamic-mode.js","../src/code-editor.js","../index.js"],"sourcesContent":["// import ace from \"ace-builds\";\r\nconst ace = window.ace\r\n// import { Range, EditSession, UndoManager } from \"ace-builds\";\r\nconst { Range, EditSession, UndoManager } = ace\r\n/*import \"ace-builds/src-noconflict/theme-cobalt.js\";\r\nimport \"ace-builds/src-noconflict/theme-merbivore_soft.js\";\r\nimport \"ace-builds/src-noconflict/theme-monokai.js\";\r\nimport \"ace-builds/src-noconflict/theme-tomorrow_night_blue.js\";\r\nimport \"ace-builds/src-noconflict/theme-twilight.js\";\r\nimport \"ace-builds/src-noconflict/theme-solarized_light.js\";\r\nimport \"ace-builds/src-noconflict/theme-ambiance.js\";\r\nimport \"ace-builds/src-noconflict/theme-chrome.js\";\r\nimport \"ace-builds/src-noconflict/theme-textmate.js\";\r\nimport \"ace-builds/webpack-resolver\";\r\nconst path = \"ace-builds/src-noconflict/\";\r\nace.config.set(\"basePath\", path);*/\r\nconst TextHighlightRules = ace.require(\r\n    \"ace/mode/text_highlight_rules\"\r\n).TextHighlightRules;\r\n\r\nconst TextMode = ace.require(\"ace/mode/text\").Mode;\r\nconst BaseFoldMode = ace.require(\"ace/mode/folding/fold_mode\").FoldMode;\r\nconst TokenIterator = ace.require(\"ace/token_iterator\").TokenIterator;\r\n// console.log(TextMode);\r\n// const JSONMode = ace.require(\"ace/mode/json\").Mode;\r\nconst Themes = {\r\n    light: [\"Solarized Light\", \"Ambience\", \"Chrome\", \"Textmate\"],\r\n    dark: [\r\n        \"Cobalt\",\r\n        \"Merbivore Soft\",\r\n        \"Monokai\",\r\n        \"Tomorrow night blue\",\r\n        \"Twilight\",\r\n    ],\r\n    // default: ace.require('ace/theme/ambiance'),\r\n};\r\n\r\n// import modes that you want to include into your main bundle\r\n// import 'ace-builds/src-noconflict/mode-javascript'\r\n// import webpack resolver to dynamically load modes, you need to install file-loader for this to work!\r\n// import 'ace-builds/webpack-resolver'\r\n\r\n// if you want to allow dynamic loading of only a few modules use setModuleUrl for each of them manually\r\n// import jsWorkerUrl from 'file-loader!../../build/src-noconflict/worker-javascript';\r\n// ace.config.setModuleUrl('ace/mode/javascript_worker', jsWorkerUrl)\r\n\r\n// import {Mode as JSMode} from '../../build/src-noconflict/mode-javascript'\r\n// editor.setMode( new JSMode())\r\n\r\n// const EditSession = ace.EsitSession //ace.require('ace/edit_session').EditSession\r\n// const UndoManager = ace.UndoManager //ace.require('ace/undomanager').UndoManager\r\n// const BaseFoldMode = ace.require('ace/mode/folding/fold_mode').FoldMode\r\n// const TokenIterator = ace.require('ace/token_iterator').TokenIterator\r\n\r\n// const TextMode = require('ace-builds/src-noconflict/mode-text').Mode\r\n// import * as TextNode from 'ace-builds/src-noconflict/mode-text'\r\n\r\nexport {\r\n    ace,\r\n    Range,\r\n    EditSession,\r\n    UndoManager,\r\n    BaseFoldMode,\r\n    TokenIterator,\r\n    TextHighlightRules,\r\n    TextMode,\r\n    // JSONMode,\r\n    Themes,\r\n};\r\n","// import { ResParser, Parser, Keywords } from 'rules-engine'\r\nimport { Rules } from \"rules-engine\";\r\n\r\nRules.init([\"fr\", \"de\"]);\r\n\r\nexport default Rules;\r\n","/* jslint esversion:8 */\r\nimport * as wrapper from \"./ace-wrapper\";\r\nimport Rules from \"./engine-wrapper\";\r\nconst TextHighlightRules = wrapper.TextHighlightRules;\r\n// var rules = null;\r\nconst mode = \"ace/mode/kbf\";\r\n\r\nclass HighlightRules extends TextHighlightRules {\r\n    constructor(language) {\r\n        super();\r\n        this.keywords = {};\r\n        this.rules = new Rules(language, mode);\r\n        this.setLanguage(language);\r\n    }\r\n    getRules() {\r\n        return {\r\n            start: [\r\n                {\r\n                    token: \"comment\",\r\n                    regex: /\\/\\/.*$/,\r\n                },\r\n                {\r\n                    token: \"comment\", // multi line comment\r\n                    regex: /\\/\\*/,\r\n                    next: \"comment\",\r\n                },\r\n                {\r\n                    token: \"string\", // character\r\n                    regex: /'(?:.|\\\\(:?u[\\da-fA-F]+|x[\\da-fA-F]+|[tbrf'\"n]))?'/,\r\n                },\r\n                { token: \"string\", regex: \"`\", next: \"string\" },\r\n                { token: \"string\", regex: \"'\", next: \"qstring\" },\r\n                {\r\n                    token: \"constant.numeric\", // hex\r\n                    regex: \"0[xX][0-9a-fA-F]+\\\\b\",\r\n                },\r\n                {\r\n                    token: \"constant.numeric\", // float\r\n                    regex: /[+-]?\\d+(?:(?:\\.\\d*)?(?:[eE][+-]?\\d+)?)?\\b/,\r\n                },\r\n                {\r\n                    token: \"punctuation.operator\",\r\n                    regex: /\\?|\\:|\\,|\\;|\\./,\r\n                },\r\n                {\r\n                    token: \"paren.lparen\",\r\n                    regex: \"[[({]\",\r\n                },\r\n                {\r\n                    token: \"paren.rparen\",\r\n                    regex: \"[\\\\])}]\",\r\n                },\r\n                {\r\n                    token: \"text\",\r\n                    regex: /\\s+/,\r\n                },\r\n                {\r\n                    token: \"keyword.operator\",\r\n                    regex: /[-+%=<>*]|[~:,.&!^]/,\r\n                },\r\n                {\r\n                    token: \"keyword.operator\",\r\n                    regex: \"abs sign ceil floor trunc frac acos asin atan cos sin tan cosh sinh tanh exp log log10 sqrt pi\"\r\n                        .split(\" \")\r\n                        .join(\"|\"),\r\n                },\r\n                {\r\n                    token: (value) => {\r\n                        const found = this.keywordEntries.find((entry) => {\r\n                            return (\r\n                                entry[1].toLowerCase() === value.toLowerCase()\r\n                            );\r\n                        });\r\n                        if (found) {\r\n                            switch (found[0]) {\r\n                                case \"TRUE\":\r\n                                case \"FALSE\":\r\n                                case \"YES\":\r\n                                case \"NO\":\r\n                                    return \"constant.language.boolean\";\r\n                                case \"OR\":\r\n                                case \"AND\":\r\n                                case \"IF\":\r\n                                case \"ELSE\":\r\n                                case \"ELSEIF\":\r\n                                case \"THEN\":\r\n                                    return \"keyword.control\";\r\n                                case \"DIGIT\":\r\n                                case \"TEXT\":\r\n                                case \"MENU\":\r\n                                case \"NUMBER\":\r\n                                    return \"constant.language\";\r\n                                default:\r\n                                    return \"keyword.other\";\r\n                            }\r\n                        } else {\r\n                            return \"text\";\r\n                        }\r\n                    },\r\n                    regex: new RegExp(/\\b\\w+\\b/),\r\n                },\r\n                {\r\n                    caseInsensitive: true,\r\n                },\r\n                // this.keywordRule\r\n            ],\r\n            qstring: [\r\n                { token: \"constant.language.escape\", regex: /''/ },\r\n                { token: \"string\", regex: \"'\", next: \"start\" },\r\n                { defaultToken: \"string\" },\r\n            ],\r\n            string: [\r\n                { token: \"constant.language.escape\", regex: /``/ },\r\n                { token: \"string\", regex: \"`\", next: \"start\" },\r\n                { defaultToken: \"string\" },\r\n            ],\r\n            comment: [\r\n                {\r\n                    token: \"comment\", // closing comment\r\n                    regex: \"\\\\*\\\\/\",\r\n                    next: \"start\",\r\n                },\r\n                {\r\n                    defaultToken: \"comment\",\r\n                },\r\n            ],\r\n        };\r\n    }\r\n    // Set language definition dynamically at run time\r\n    setLanguage(language) {\r\n        this.keywords = this.rules.getKeywords();\r\n        if (!this.keywords) {\r\n            throw new Error(\"Language not supported yet: \" + language || \"\");\r\n        }\r\n        this.keywordEntries = Object.entries(this.keywords);\r\n        this.$rules = this.getRules();\r\n        this.normalizeRules();\r\n        // this.embedRules(DocCommentHighlightRules, \"doc-\", [ DocCommentHighlightRules.getEndRule(\"start\") ]);\r\n    }\r\n}\r\n\r\nexport default HighlightRules;\r\n","/* jslint esversion:6 */\r\nimport * as wrapper from './ace-wrapper'\r\nconst {\r\n  Range,\r\n  BaseFoldMode,\r\n  TokenIterator,\r\n} = wrapper\r\n// ace.config.set('basePath', '../node_mdules/ace-builds/src-noconflict')\r\n// ace.config.set('basePath', '../lib/ace-builds/src-noconflict')\r\n// require('ace-builds/webpack-resolver')\r\n// const Range = ace.Range\r\n// const BaseFoldMode = ace.require('ace/mode/folding/fold_mode').FoldMode\r\n// const TokenIterator = ace.require('ace/token_iterator').TokenIterator\r\nconst fold = {\r\n  en: {\r\n    foldingStartMarker: /\\b^\\s*(?:rule|prompt|summary)\\b/i,\r\n    foldingStopMarker: /\\b^\\s*(?:prompt|rule|max|min|text|digit|yes\\/no)\\b/ig,\r\n    foldingStopMenu: /\\b^\\s*(?:max|min|text|digit|yes\\/no)\\b/ig,\r\n  },\r\n  fr: {\r\n    foldingStartMarker: /\\b^\\s*(?:rule|prompt|summary)\\b/i,\r\n    foldingStopMarker: /\\b^\\s*(?:prompt|rule|max|min|text|digit|yes\\/no)\\b/ig,\r\n    foldingStopMenu: /\\b^\\s*(?:max|min|text|digit|yes\\/no)\\b/ig,\r\n  },\r\n}\r\n\r\nexport default class extends BaseFoldMode {\r\n  constructor () {\r\n    super()\r\n    // regular expressions that identify starting and stopping points\r\n    this.foldingStartMarker = fold.en.foldingStartMarker\r\n    this.foldingStopMarker = fold.en.foldingStopMarker\r\n    this.foldingStopMenu = fold.en.foldingStopMenu\r\n\r\n    this.getFoldWidgetRange = (session, _foldStyle, row) => {\r\n      const lang = session.language\r\n      var line = session.getLine(row)\r\n      switch (lang) {\r\n      default:\r\n        this.foldingStartMarker = fold[lang].foldingStartMarker // /\\b^\\s*(?:rule|prompt|summary|if|then|else)\\b/;\r\n        this.foldingStopMarker = fold[lang].foldingStopMarker /// \\b^\\s*(?:rule|prompt)\\b/;\r\n        this.foldingStopMenu = fold[lang].foldingStopMenu\r\n      }\r\n      var matchStart = line.match(this.foldingStartMarker)\r\n      if (matchStart) {\r\n        // var i = matchStart.index;\r\n        // if (match[0]) {\r\n        var position = { row: row, column: line.length }\r\n        var iterator = new TokenIterator(session, position.row, position.column)\r\n        var token = iterator.getCurrentToken()\r\n        var seek = this.foldingStopMarker\r\n\r\n        while (token) {\r\n          if (token.value.match(seek)) {\r\n            const currentRow = iterator.getCurrentTokenRow()\r\n            return Range.fromPoints(position, {\r\n              row: token.value.match(this.foldingStopMenu) ? currentRow : currentRow - 1,\r\n              column: iterator.getCurrentTokenColumn(),\r\n            })\r\n          }\r\n          token = iterator.stepForward()\r\n        }\r\n        // }\r\n      }\r\n      // test each line, and return a range of segments to collapse\r\n      return null\r\n    }\r\n  }\r\n}\r\n","function debounce (func, wait, immediate) {\r\n  var timeout\r\n  return function () {\r\n    var context = this; var args = arguments\r\n    var later = function () {\r\n      timeout = null\r\n      if (!immediate) func.apply(context, args)\r\n    }\r\n    var callNow = immediate && !timeout\r\n    clearTimeout(timeout)\r\n    timeout = setTimeout(later, wait)\r\n    if (callNow) func.apply(context, args)\r\n  }\r\n}\r\n\r\nexport default debounce\r\n\r\n/* Usage\r\nvar myEfficientFn = debounce(function() {\r\n\t// All the taxing stuff you do\r\n}, 250);\r\n\r\nwindow.addEventListener('resize', myEfficientFn);\r\n*/\r\n","/* jslint esversion:8 */\r\nimport { TextMode } from \"./ace-wrapper\";\r\n\r\nimport Rules from \"./engine-wrapper\";\r\nimport HighlightRules from \"./default_highlight_rules\";\r\nimport DefaultFoldMode from \"./default_fold\";\r\nimport debounce from \"./debounce\";\r\n// const ace = require('ace-builds/src-noconflict/ace')\r\n// ace.config.set('basePath', '../node_mdules/ace-builds/src-noconflict')\r\n// const TextMode = ace.require('ace/mode/text').Mode\r\n\r\nexport default class extends TextMode {\r\n    constructor(editor, watch = true) {\r\n        super();\r\n        this.lineCommentStart = \"//\";\r\n        this.blockComment = { start: \"/*\", end: \"*/\" };\r\n        this.editor = editor;\r\n        this.language = editor.session.language;\r\n        this.$highlightRules = new HighlightRules(this.language);\r\n        // If static highlighter, do not watch for changes\r\n        this.$id = \"ace/mode/kbf\";\r\n        this.rules = new Rules(this.editor.session.language || \"en\", this.$id);\r\n        if (watch) this.watch();\r\n    }\r\n\r\n    watch() {\r\n        this.foldingRules = new DefaultFoldMode();\r\n        this.editor.on(\r\n            \"change\",\r\n            debounce(async () => {\r\n                const value = this.editor.getValue();\r\n                try {\r\n                    const errors = await this.rules.parse(value);\r\n                    this.editor.session.clearAnnotations();\r\n                    this.editor.session.setAnnotations(errors);\r\n                } catch (e) {\r\n                    // this.editor.session.setAnnotations(errors)\r\n                    console.log(e);\r\n                }\r\n            }, 1000)\r\n        );\r\n    }\r\n}\r\n","/* jslint esversion:8 */\r\nimport * as wrapper from \"./ace-wrapper\";\r\nconst { TextHighlightRules } = wrapper;\r\n// const TextHighlightRules = ace.require('ace/mode/text_highlight_rules').TextHighlightRules\r\n\r\nclass HighlightRules extends TextHighlightRules {\r\n    constructor() {\r\n        super();\r\n        this.$rules = {\r\n            start: [\r\n                {\r\n                    token: \"comment\",\r\n                    regex: /\\/\\/.*$/,\r\n                },\r\n                {\r\n                    token: \"comment\", // multi line comment\r\n                    regex: /\\/\\*/,\r\n                    next: \"comment\",\r\n                },\r\n                { token: \"string\", regex: \"`\", next: \"string\" },\r\n                { token: \"string\", regex: \"'\", next: \"qstring\" },\r\n                {\r\n                    token: \"constant.numeric\", // hex\r\n                    regex: /0[xX][0-9a-fA-F]+\\b/,\r\n                },\r\n                {\r\n                    token: \"constant.numeric\", // float\r\n                    regex: /[+-]?\\d+(?:(?:\\.\\d*)?(?:[eE][+-]?\\d+)?)?\\b/,\r\n                },\r\n                {\r\n                    token: \"keyword.operator\",\r\n                    regex: /\\W[-+%=<>*]\\W|\\*\\*|[~:,.&$]|->*?|=>/,\r\n                },\r\n                {\r\n                    token: \"paren.lparen\",\r\n                    regex: /[\\[(\\{]/,\r\n                },\r\n                {\r\n                    token: \"paren.rparen\",\r\n                    regex: /[\\])\\}]/,\r\n                },\r\n\r\n                {\r\n                    token: \"keyword\",\r\n                    regex: /[^=]+(?:[=:])/,\r\n                },\r\n                {\r\n                    token: \"punctuation.operator\",\r\n                    regex: /\\?[:,;=\\.]/,\r\n                },\r\n                {\r\n                    caseInsensitive: true,\r\n                },\r\n            ],\r\n            qstring: [\r\n                { token: \"constant.language.escape\", regex: /''/ },\r\n                { token: \"string\", regex: \"'\", next: \"start\" },\r\n                { defaultToken: \"string\" },\r\n            ],\r\n            string: [\r\n                { token: \"constant.language.escape\", regex: /``/ },\r\n                { token: \"string\", regex: \"`\", next: \"start\" },\r\n                { defaultToken: \"string\" },\r\n            ],\r\n            comment: [\r\n                {\r\n                    token: \"comment\", // closing comment\r\n                    regex: /\\*\\//,\r\n                    next: \"start\",\r\n                },\r\n                {\r\n                    defaultToken: \"comment\",\r\n                },\r\n            ],\r\n        };\r\n    }\r\n}\r\n// \"variable.language\": \"this\",\r\n// \"constant.language\": \"TRUE FALSE NULL SPACE\",\r\nexport default new HighlightRules();\r\n","/* jslint esversion:6 */\r\nimport * as wrapper from './ace-wrapper'\r\nconst {\r\n  Range,\r\n  BaseFoldMode,\r\n  TokenIterator,\r\n} = wrapper\r\n\r\n// const Range = ace.Range\r\n// const BaseFoldMode = ace.require('ace/mode/folding/fold_mode').FoldMode\r\n// const TokenIterator = ace.require('ace/token_iterator').TokenIterator\r\n\r\nexport default class extends BaseFoldMode {\r\n  constructor () {\r\n    super()\r\n    // regular expressions that identify starting and stopping points\r\n    this.foldingStartMarker = /^\\s*\\/\\/[^-]+$/\r\n    this.foldingStopMarker = /^\\s*--/\r\n\r\n    this.getFoldWidgetRange = (session, _foldStyle, row) => {\r\n      var line = session.getLine(row)\r\n      var matchStart = line.match(this.foldingStartMarker)\r\n      if (matchStart) {\r\n        var position = { row: row, column: line.length }\r\n        var iterator = new TokenIterator(session, position.row, position.column)\r\n        var token = iterator.getCurrentToken()\r\n        var seek = this.foldingStopMarker\r\n\r\n        while (token) {\r\n          if (token.value.match(seek)) {\r\n            const currentRow = iterator.getCurrentTokenRow()\r\n            return Range.fromPoints(position, {\r\n              row: currentRow,\r\n              column: iterator.getCurrentTokenColumn(),\r\n            })\r\n          }\r\n          token = iterator.stepForward()\r\n        }\r\n        // }\r\n      }\r\n      // test each line, and return a range of segments to collapse\r\n      return null\r\n    }\r\n  }\r\n}\r\n","import { TextMode } from \"./ace-wrapper\";\r\n// import { ResParser as Parser } from './engine-wrapper'\r\n// import { rules as Rule } from './engine-wrapper'\r\nimport Rules from \"./engine-wrapper\";\r\nimport debounce from \"./debounce\";\r\nimport HighlightRules from \"./resource_highlight_rules\";\r\nimport DefaultFoldMode from \"./resource_fold\";\r\n// const ace = require('ace-builds/src-noconflict/ace')\r\n// const TextMode = ace.require('ace/mode/text').Mode\r\nexport default class extends TextMode {\r\n    constructor(editor, onlyHighlight = false) {\r\n        super();\r\n        this.$highlightRules = this.HighlightRules = HighlightRules;\r\n        this.foldingRules = new DefaultFoldMode();\r\n        this.editor = editor;\r\n        this.language = editor.session.language;\r\n        this.$id = \"ace/mode/res\";\r\n        this.rules = new Rules(this.editor.session.language || \"en\", this.$id);\r\n        // If static highlighter, do not watch for changes\r\n        if (!onlyHighlight) this.watch();\r\n    }\r\n\r\n    watch() {\r\n        // this.parser = new Parser(this.editor.session.language || 'en')\r\n        // this.parser.on('done', (errors) => {\r\n        // this.editor.session.setAnnotations(errors)\r\n        // })\r\n        this.editor.on(\r\n            \"change\",\r\n            debounce(async () => {\r\n                const value = this.editor.getValue();\r\n                try {\r\n                    const errors = await this.rules.parse(value);\r\n                    this.editor.session.clearAnnotations();\r\n                    this.editor.session.setAnnotations(errors);\r\n                } catch (e) {\r\n                    // this.editor.session.setAnnotations(errors)\r\n                    console.log(e);\r\n                }\r\n            }, 1000)\r\n        );\r\n    }\r\n}\r\n","function autoImplementedMode (filename) {\r\n  var ext = filename.split('.').pop()\r\n  var prefix = \"ace/mode/\"\r\n\r\n  if (!ext) {\r\n    return prefix + \"text\"\r\n  }\r\n\r\n  /**\r\n   *  Functional, but inefficient if you want to write it by yourself ....\r\n   */\r\n  switch (ext) {\r\n    case \"js\":\r\n      return prefix + \"javascript\"\r\n    case \"json\":\r\n      return prefix + \"json\"\r\n    default: 'text'\r\n  }\r\n}\r\n\r\n\r\n// var filename = \"myfile.js\"\r\n// In this case \"ace/mode/javascript\"\r\n// var mode = autoImplementedMode(filename)\r\n// editor.getSession().setMode(mode)\r\nexport default autoImplementedMode\r\n","import { ace, EditSession, UndoManager, Themes } from \"./ace-wrapper\";\r\n\r\nimport Mode from \"./default_mode\";\r\nimport ResourceMode from \"./resource_mode\";\r\nimport dynamicMode from \"./dynamic-mode\";\r\n\r\nclass CodeEditor {\r\n    constructor() {\r\n        if (!CodeEditor.instance) {\r\n            CodeEditor.instance = this;\r\n        }\r\n        this.language = \"en\";\r\n        this.editors = [];\r\n        this.defaults = {\r\n            fontSize: 18,\r\n            fontName: \"Courier New\",\r\n            theme: \"ace/theme/tomorrow_night_blue\",\r\n        };\r\n        this.theme = this.defaults.theme; // 'ace/theme/tomorrow_night_blue'\r\n        this.fontSize = this.defaults.fontSize;\r\n        this.fontName = this.defaults.fontName;\r\n\r\n        return CodeEditor.instance;\r\n    }\r\n\r\n    setHighlightRule(editor, fileName) {\r\n        // return this.setHighlightRules(editor, mode)\r\n        const ext = fileName\r\n            ? fileName.substring(fileName.indexOf(\".\"))\r\n            : \".kbf\";\r\n        let defaultMode = null;\r\n        if (ext === \".kbf\") {\r\n            defaultMode = new Mode(editor);\r\n        } else if (ext === \".res\") {\r\n            defaultMode = new ResourceMode(editor);\r\n        } else {\r\n            const modePath = dynamicMode(fileName);\r\n            const DynamicMode = ace.require(modePath).Mode;\r\n            editor.session.setMode(new DynamicMode());\r\n        }\r\n\r\n        editor.session.setMode(defaultMode, () => {\r\n            editor.session.bgTokenizer.start(0);\r\n        });\r\n    }\r\n\r\n    edit(element, options = {}) {\r\n        let el = null;\r\n        if (typeof element === \"string\") {\r\n            el =\r\n                document.getElementById(element) ||\r\n                document.querySelector(element);\r\n        } else if (element && (element.id || element.tagName)) {\r\n            el = element;\r\n        }\r\n        if (!el) {\r\n            console.error(\"Invalid container reference: \" + el);\r\n            return null;\r\n        }\r\n        if (typeof options !== \"object\") {\r\n            console.error(\"Invalid options parameter : \" + options);\r\n            return null;\r\n        }\r\n\r\n        let editor = null;\r\n        const session = new EditSession(options.text ? options.text : \"\");\r\n        session.language = options.language ? options.language : this.language;\r\n        session.setUndoManager(new UndoManager());\r\n\r\n        const editorSettings = {\r\n            fontSize: options.fontSize || this.fontSize,\r\n            fontFamily: options.fontName || this.fontName,\r\n            theme: options.theme || this.theme,\r\n            showLineNumbers: true,\r\n            readOnly: false,\r\n            showGutter: true,\r\n            animatedScroll: true,\r\n            minLines: 5,\r\n            maxLines: 'auto',\r\n            selectionStyle: \"row\",\r\n            highlightActiveLine: true,\r\n            showPrintMargin: true,\r\n        };\r\n\r\n        editor = ace.edit(el, Object.assign(editorSettings, options));\r\n        editor.data = options.data || {};\r\n        editor.setSession(session);\r\n        editor.renderer.setScrollMargin(10, 10, 10, 10);\r\n        editor.$blockScrolling = Infinity;\r\n        editor.setOptions({\r\n            scrollPastEnd: 0.9,\r\n            autoScrollEditorIntoView: true,\r\n        });\r\n        editor.focus();\r\n        // editor.select()\r\n        // editor.gotoLine(0)\r\n        // editor.blur(true)\r\n        // this.editor.session.selection.on('changeSelection', function(){});\r\n        // this.editor.session.selection.on('changeCursor', function(){});\r\n        this.setHighlightRule(editor, options.fileName);\r\n        this.editors.push(editor);\r\n        setTimeout(() => {\r\n            // let sel = editor.selection\r\n            // sel.clearSelection()\r\n            editor.clearSelection();\r\n        }, 0);\r\n\r\n        return editor;\r\n    }\r\n\r\n    reset() {\r\n        this.FontSize = this.defaults.fontSize;\r\n        this.FontName = this.defaults.fontName;\r\n        this.Theme = this.defaults.theme;\r\n    }\r\n    destroy() {\r\n        this.editors.forEach((editor) => {\r\n            editor.destroy();\r\n            editor.container.remove();\r\n        });\r\n    }\r\n    get ThemeList() {\r\n        return Themes;\r\n    }\r\n    set Theme(val) {\r\n        if (!val) {\r\n            console.log(\"Theme not set\");\r\n            return;\r\n        }\r\n        let theme = val && val.toLowerCase();\r\n        if (\r\n            this.Themes.dark.find(\r\n                (item) => item.toLowerCase() === theme.toLocaleLowerCase()\r\n            ) ||\r\n            this.Themes.light.find(\r\n                (item) => item.toLowerCase() === theme.toLocaleLowerCase()\r\n            )\r\n        ) {\r\n            this.theme = \"ace/theme/\" + theme.replace(/\\s+/g, \"_\");\r\n            this.editors.forEach((editor) => editor.setTheme(this.theme));\r\n        }\r\n    }\r\n    get Theme() {\r\n        return this.theme;\r\n    }\r\n    get FontName() {\r\n        return this.fontName;\r\n    }\r\n    set FontName(value) {\r\n        this.fontName = value;\r\n    }\r\n    get FontSize() {\r\n        return this.fontSize;\r\n    }\r\n    set FontSize(value) {\r\n        this.fontSize = value;\r\n    }\r\n    get Editors() {\r\n        return this.editors;\r\n    }\r\n}\r\nconst instance = new CodeEditor();\r\nObject.freeze(instance);\r\n\r\n/*  setHighlightRules (editor, language) {\r\n    const lang = language || 'text'\r\n    const session = editor.session\r\n    editor.session.setMode('ace/mode/' + lang, function () {\r\n    const rules = session.$mode.$highlightRules.getRules()\r\n      for (let stateName in rules) {\r\n        if (Object.prototype.hasOwnProperty.call(rules, stateName)) {\r\n          rules[stateName].unshift({\r\n            token: 'keyword',\r\n            regex: /TITLE/,\r\n          }, {\r\n            token: 'constant',\r\n            regex: /GOAL/,\r\n          })\r\n        }\r\n      }\r\n      // console.log(session.$mode)\r\n      // force recreation of tokenizer\r\n      session.$mode.$tokenizer = null\r\n      session.bgTokenizer.setTokenizer(session.$mode.getTokenizer())\r\n      // force re-highlight whole document\r\n      session.bgTokenizer.start(0)\r\n    })\r\n  } */\r\nexport default instance;\r\n","/* eslint-disable */\r\nimport AceEditor from './src'\r\nexport default AceEditor\r\n"],"names":["ace","window","Range","EditSession","UndoManager","TextHighlightRules","require","TextMode","Mode","BaseFoldMode","FoldMode","TokenIterator","Themes","light","dark","Rules","init","wrapper","mode","HighlightRules","language","keywords","rules","setLanguage","getRules","start","token","regex","next","split","join","value","found","keywordEntries","find","entry","toLowerCase","RegExp","caseInsensitive","qstring","defaultToken","string","comment","getKeywords","Error","Object","entries","$rules","normalizeRules","fold","en","foldingStartMarker","foldingStopMarker","foldingStopMenu","fr","getFoldWidgetRange","session","_foldStyle","row","lang","line","getLine","matchStart","match","position","column","length","iterator","getCurrentToken","seek","currentRow","getCurrentTokenRow","fromPoints","getCurrentTokenColumn","stepForward","debounce","func","wait","immediate","timeout","context","args","arguments","later","apply","callNow","clearTimeout","setTimeout","_catch","body","recover","result","e","then","editor","watch","lineCommentStart","blockComment","end","$highlightRules","$id","foldingRules","DefaultFoldMode","on","getValue","parse","errors","clearAnnotations","setAnnotations","console","log","onlyHighlight","autoImplementedMode","filename","ext","pop","prefix","CodeEditor","instance","editors","defaults","fontSize","fontName","theme","setHighlightRule","fileName","substring","indexOf","defaultMode","ResourceMode","modePath","dynamicMode","DynamicMode","setMode","bgTokenizer","edit","element","options","el","document","getElementById","querySelector","id","tagName","error","text","setUndoManager","editorSettings","fontFamily","showLineNumbers","readOnly","showGutter","animatedScroll","minLines","maxLines","selectionStyle","highlightActiveLine","showPrintMargin","assign","data","setSession","renderer","setScrollMargin","$blockScrolling","Infinity","setOptions","scrollPastEnd","autoScrollEditorIntoView","focus","push","clearSelection","reset","FontSize","FontName","Theme","destroy","forEach","container","remove","val","item","toLocaleLowerCase","replace","setTheme","freeze"],"mappings":"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"}