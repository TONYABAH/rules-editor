{"version":3,"file":"rules-editor.modern.js","sources":["../src/ace-wrapper.js","../src/default_highlight_rules.js","../src/default_fold.js","../src/debounce.js","../src/default_mode.js","../src/resource_highlight_rules.js","../src/resource_fold.js","../src/resource_mode.js","../src/dynamic-mode.js","../src/code-editor.js","../index.js"],"sourcesContent":["import ace from 'ace-builds'\r\n\r\nimport {\r\n  Range,\r\n  EditSession,\r\n  UndoManager,\r\n} from 'ace-builds'\r\n\r\nimport 'ace-builds/src-noconflict/theme-cobalt.js'\r\nimport 'ace-builds/src-noconflict/theme-merbivore_soft.js'\r\nimport 'ace-builds/src-noconflict/theme-monokai.js'\r\nimport 'ace-builds/src-noconflict/theme-tomorrow_night_blue.js'\r\nimport 'ace-builds/src-noconflict/theme-twilight.js'\r\nimport 'ace-builds/src-noconflict/theme-solarized_light.js'\r\nimport 'ace-builds/src-noconflict/theme-ambiance.js'\r\nimport 'ace-builds/src-noconflict/theme-chrome.js'\r\nimport 'ace-builds/src-noconflict/theme-textmate.js'\r\nrequire('ace-builds/webpack-resolver')\r\n// const path = 'ace-builds/src-noconflict/'\r\n// ace.config.set('basePath', path)\r\n\r\nconst TextHighlightRules = ace.require('ace/mode/text_highlight_rules').TextHighlightRules\r\nconst BaseFoldMode = ace.require('ace/mode/folding/fold_mode').FoldMode\r\nconst TokenIterator = ace.require('ace/token_iterator').TokenIterator\r\n\r\nconst TextMode = ace.require('ace/mode/text').Mode\r\nconst Themes = {\r\n  light: [\r\n    'Solarized Light',\r\n    'Ambience',\r\n    'Chrome',\r\n    'Textmate'\r\n  ],\r\n  dark: [\r\n    'Cobalt',\r\n    'Merbivore Soft',\r\n    'Monokai',\r\n    'Tomorrow night blue',\r\n    'Twilight'\r\n  ],\r\n  // default: ace.require('ace/theme/ambiance'),\r\n}\r\n\r\n// import modes that you want to include into your main bundle\r\n// import 'ace-builds/src-noconflict/mode-javascript'\r\n// import webpack resolver to dynamically load modes, you need to install file-loader for this to work!\r\n// import 'ace-builds/webpack-resolver'\r\n\r\n// if you want to allow dynamic loading of only a few modules use setModuleUrl for each of them manually\r\n// import jsWorkerUrl from 'file-loader!../../build/src-noconflict/worker-javascript';\r\n// ace.config.setModuleUrl('ace/mode/javascript_worker', jsWorkerUrl)\r\n\r\n// import {Mode as JSMode} from '../../build/src-noconflict/mode-javascript'\r\n// editor.setMode( new JSMode())\r\n\r\n// const EditSession = ace.EsitSession //ace.require('ace/edit_session').EditSession\r\n// const UndoManager = ace.UndoManager //ace.require('ace/undomanager').UndoManager\r\n// const BaseFoldMode = ace.require('ace/mode/folding/fold_mode').FoldMode\r\n// const TokenIterator = ace.require('ace/token_iterator').TokenIterator\r\n\r\n// const TextMode = require('ace-builds/src-noconflict/mode-text').Mode\r\n// import * as TextNode from 'ace-builds/src-noconflict/mode-text'\r\n\r\nexport {\r\n  ace,\r\n  Range,\r\n  EditSession,\r\n  UndoManager,\r\n  BaseFoldMode,\r\n  TokenIterator,\r\n  TextHighlightRules,\r\n  TextMode,\r\n  Themes,\r\n}\r\n","/* jslint esversion:8 */\r\nimport * as wrapper from './ace-wrapper'\r\nconst TextHighlightRules = wrapper.TextHighlightRules\r\n\r\nimport Rules from './engine-wrapper'\r\n// console.log(Keywords)\r\nclass HighlightRules extends TextHighlightRules {\r\n  constructor (language) {\r\n    super()\r\n    this.keywords = {}\r\n    this.setLanguage(language)\r\n  }\r\n  getRules () {\r\n    return {\r\n      start: [\r\n        {\r\n          token: 'comment',\r\n          regex: /\\/\\/.*$/,\r\n        }, {\r\n          token: 'comment', // multi line comment\r\n          regex: /\\/\\*/,\r\n          next: 'comment',\r\n        }, {\r\n          token: 'string', // character\r\n          regex: /'(?:.|\\\\(:?u[\\da-fA-F]+|x[\\da-fA-F]+|[tbrf'\"n]))?'/,\r\n        }, \r\n        { token: 'string', regex: '`', next: 'string' },\r\n        { token: 'string', regex: '\\'', next: 'qstring' },\r\n        {\r\n          token: 'constant.numeric', // hex\r\n          regex: '0[xX][0-9a-fA-F]+\\\\b',\r\n        }, {\r\n          token: 'constant.numeric', // float\r\n          regex: /[+-]?\\d+(?:(?:\\.\\d*)?(?:[eE][+-]?\\d+)?)?\\b/,\r\n        },\r\n        {\r\n          token: 'punctuation.operator',\r\n          regex: /\\?|\\:|\\,|\\;|\\./,\r\n        }, {\r\n          token: 'paren.lparen',\r\n          regex: '[[({]',\r\n        }, {\r\n          token: 'paren.rparen',\r\n          regex: '[\\\\])}]',\r\n        }, {\r\n          token: 'text',\r\n          regex: /\\s+/,\r\n        }, {\r\n            token: 'keyword.operator',\r\n            regex: /[-+%=<>*]|[~:,.&!^]/,\r\n        }, {\r\n          token: 'keyword.operator',\r\n          regex: 'abs sign ceil floor trunc frac acos asin atan cos sin tan cosh sinh tanh exp log log10 sqrt pi'.split(' ').join('|'),\r\n        }, {\r\n          token: (value) => {\r\n            const found = this.keywordEntries.find(entry => {\r\n              return entry[1].toLowerCase() === value.toLowerCase()\r\n            })\r\n            if (found) {\r\n              switch (found[0]) {\r\n                case 'TRUE': case 'FALSE': case 'YES': case 'NO': \r\n                  return 'constant.language.boolean'\r\n                case 'OR': case 'AND':\r\n                case 'IF': case 'ELSE': case 'ELSEIF': case 'THEN':\r\n                  return 'keyword.control'\r\n                case 'DIGIT': case 'TEXT': case 'MENU': case 'NUMBER':\r\n                  return 'constant.language'\r\n                default:\r\n                  return 'keyword.other'\r\n              }\r\n            } else {\r\n              return 'text'\r\n            }\r\n          },\r\n          regex: new RegExp(/\\b\\w+\\b/)\r\n        }, {\r\n          caseInsensitive: true,\r\n        },\r\n        // this.keywordRule\r\n      ],\r\n      qstring: [\r\n        { token: 'constant.language.escape', regex: /''/ },\r\n        { token: 'string', regex: '\\'', next: 'start' },\r\n        { defaultToken: 'string' },\r\n      ],\r\n      string: [\r\n        { token: 'constant.language.escape', regex: /``/ },\r\n        { token: 'string', regex: '`', next: 'start' },\r\n        { defaultToken: 'string' },\r\n      ],\r\n      comment: [\r\n        {\r\n          token: 'comment', // closing comment\r\n          regex: '\\\\*\\\\/',\r\n          next: 'start',\r\n        }, {\r\n          defaultToken: 'comment',\r\n        },\r\n      ],\r\n    }\r\n  }\r\n  // Set language definition dynamically at run time\r\n  setLanguage (language) {\r\n    const r = Rules(language, ['fr', 'de'])\r\n    this.keywords = r.getKeywords()\r\n    if (!this.keywords) {\r\n      throw new Error('Language not supported yet: ' + language || '')\r\n    }\r\n    this.keywordEntries = Object.entries(this.keywords)\r\n    this.$rules = this.getRules()\r\n    this.normalizeRules()\r\n    // this.embedRules(DocCommentHighlightRules, \"doc-\", [ DocCommentHighlightRules.getEndRule(\"start\") ]);\r\n  }\r\n}\r\n\r\nexport default HighlightRules\r\n","/* jslint esversion:6 */\r\nimport * as wrapper from './ace-wrapper'\r\nconst {\r\n  Range,\r\n  BaseFoldMode,\r\n  TokenIterator,\r\n} = wrapper\r\n// ace.config.set('basePath', '../node_mdules/ace-builds/src-noconflict')\r\n// ace.config.set('basePath', '../lib/ace-builds/src-noconflict')\r\n// require('ace-builds/webpack-resolver')\r\n// const Range = ace.Range\r\n// const BaseFoldMode = ace.require('ace/mode/folding/fold_mode').FoldMode\r\n// const TokenIterator = ace.require('ace/token_iterator').TokenIterator\r\nconst fold = {\r\n  en: {\r\n    foldingStartMarker: /\\b^\\s*(?:rule|prompt|summary)\\b/i,\r\n    foldingStopMarker: /\\b^\\s*(?:prompt|rule|max|min|text|digit|yes\\/no)\\b/ig,\r\n    foldingStopMenu: /\\b^\\s*(?:max|min|text|digit|yes\\/no)\\b/ig,\r\n  },\r\n  fr: {\r\n    foldingStartMarker: /\\b^\\s*(?:rule|prompt|summary)\\b/i,\r\n    foldingStopMarker: /\\b^\\s*(?:prompt|rule|max|min|text|digit|yes\\/no)\\b/ig,\r\n    foldingStopMenu: /\\b^\\s*(?:max|min|text|digit|yes\\/no)\\b/ig,\r\n  },\r\n}\r\n\r\nexport default class extends BaseFoldMode {\r\n  constructor () {\r\n    super()\r\n    // regular expressions that identify starting and stopping points\r\n    this.foldingStartMarker = fold.en.foldingStartMarker\r\n    this.foldingStopMarker = fold.en.foldingStopMarker\r\n    this.foldingStopMenu = fold.en.foldingStopMenu\r\n\r\n    this.getFoldWidgetRange = (session, _foldStyle, row) => {\r\n      const lang = session.language\r\n      var line = session.getLine(row)\r\n      switch (lang) {\r\n      default:\r\n        this.foldingStartMarker = fold[lang].foldingStartMarker // /\\b^\\s*(?:rule|prompt|summary|if|then|else)\\b/;\r\n        this.foldingStopMarker = fold[lang].foldingStopMarker /// \\b^\\s*(?:rule|prompt)\\b/;\r\n        this.foldingStopMenu = fold[lang].foldingStopMenu\r\n      }\r\n      var matchStart = line.match(this.foldingStartMarker)\r\n      if (matchStart) {\r\n        // var i = matchStart.index;\r\n        // if (match[0]) {\r\n        var position = { row: row, column: line.length }\r\n        var iterator = new TokenIterator(session, position.row, position.column)\r\n        var token = iterator.getCurrentToken()\r\n        var seek = this.foldingStopMarker\r\n\r\n        while (token) {\r\n          if (token.value.match(seek)) {\r\n            const currentRow = iterator.getCurrentTokenRow()\r\n            return Range.fromPoints(position, {\r\n              row: token.value.match(this.foldingStopMenu) ? currentRow : currentRow - 1,\r\n              column: iterator.getCurrentTokenColumn(),\r\n            })\r\n          }\r\n          token = iterator.stepForward()\r\n        }\r\n        // }\r\n      }\r\n      // test each line, and return a range of segments to collapse\r\n      return null\r\n    }\r\n  }\r\n}\r\n","function debounce (func, wait, immediate) {\r\n  var timeout\r\n  return function () {\r\n    var context = this; var args = arguments\r\n    var later = function () {\r\n      timeout = null\r\n      if (!immediate) func.apply(context, args)\r\n    }\r\n    var callNow = immediate && !timeout\r\n    clearTimeout(timeout)\r\n    timeout = setTimeout(later, wait)\r\n    if (callNow) func.apply(context, args)\r\n  }\r\n}\r\n\r\nexport default debounce\r\n\r\n/* Usage\r\nvar myEfficientFn = debounce(function() {\r\n\t// All the taxing stuff you do\r\n}, 250);\r\n\r\nwindow.addEventListener('resize', myEfficientFn);\r\n*/\n","/* jslint esversion:8 */\r\nimport { TextMode } from './ace-wrapper'\r\n\r\nimport Rules from './engine-wrapper'\r\nimport HighlightRules from './default_highlight_rules'\r\nimport DefaultFoldMode from './default_fold'\r\nimport debounce from './debounce'\r\n// const ace = require('ace-builds/src-noconflict/ace')\r\n// ace.config.set('basePath', '../node_mdules/ace-builds/src-noconflict')\r\n// const TextMode = ace.require('ace/mode/text').Mode\r\n\r\nexport default class extends TextMode {\r\n  constructor (editor, watch = true) {\r\n    super()\r\n    this.lineCommentStart = '//'\r\n    this.blockComment = { start: '/*', end: '*/' }\r\n    this.editor = editor\r\n    this.language = editor.session.language\r\n    this.$highlightRules = new HighlightRules(this.language)\r\n    // If static highlighter, do not watch for changes\r\n    this.$id = \"ace/mode/kbf\"\r\n    if (watch) this.watch()\r\n  }\r\n \r\n  watch () {\r\n    this.foldingRules = new DefaultFoldMode()\r\n    this.rules = Rules(this.editor.session.language||'en', ['fr', 'de'])\r\n    // this.parser = new Parser(this.editor.session.language || 'en')\r\n    // this.parser.on('done', (data) => {\r\n    // this.editor.session.setAnnotations(data.errors)\r\n    // })\r\n    this.editor.on('change', debounce(async () => {\r\n      const value = this.editor.getValue()\r\n      try {\r\n        const errors = await this.rules.parse(value)\r\n        this.editor.session.setAnnotations(errors)\r\n      } catch (e) {\r\n        // this.editor.session.setAnnotations(errors)\r\n        console.log(e)\r\n      }\r\n    }, 250))\r\n  }\r\n}\r\n","/* jslint esversion:8 */\r\nimport * as wrapper from './ace-wrapper'\r\nconst {\r\n  TextHighlightRules,\r\n} = wrapper\r\n// const TextHighlightRules = ace.require('ace/mode/text_highlight_rules').TextHighlightRules\r\n\r\nclass HighlightRules extends TextHighlightRules {\r\n  constructor () {\r\n    super()\r\n    this.$rules = {\r\n      start: [\r\n        {\r\n          token: 'comment',\r\n          regex: /\\/\\/.*$/,\r\n        },\r\n        {\r\n          token: 'comment', // multi line comment\r\n          regex: /\\/\\*/,\r\n          next: 'comment',\r\n        },\r\n        {\r\n          token: 'constant.numeric', // hex\r\n          regex: /0[xX][0-9a-fA-F]+\\b/,\r\n        }, {\r\n          token: 'constant.numeric', // float\r\n          regex: /[+-]?\\d+(?:(?:\\.\\d*)?(?:[eE][+-]?\\d+)?)?\\b/,\r\n        },\r\n        {\r\n          token: 'keyword.operator',\r\n          regex: /\\W[-+%=<>*]\\W|\\*\\*|[~:,.&$]|->*?|=>/,\r\n        },\r\n        {\r\n          token: 'punctuation.operator',\r\n          regex: /\\?|:|,|;|\\./,\r\n        }, {\r\n          token: 'paren.lparen',\r\n          regex: /[[({]/,\r\n        }, {\r\n          token: 'paren.rparen',\r\n          regex: /[\\])}]/,\r\n        },\r\n        {\r\n          token: 'identifier',\r\n          regex: /=[^=]+$/,\r\n        },\r\n\r\n        {\r\n          token: 'keyword',\r\n          regex: /[^=]+=/,\r\n        },\r\n        {\r\n          caseInsensitive: true,\r\n        },\r\n      ],\r\n      comment: [\r\n        {\r\n          token: 'comment', // closing comment\r\n          regex: /\\*\\//,\r\n          next: 'start',\r\n        }, {\r\n          defaultToken: 'comment',\r\n        },\r\n      ],\r\n    }\r\n  }\r\n}\r\n// \"variable.language\": \"this\",\r\n// \"constant.language\": \"TRUE FALSE NULL SPACE\",\r\nexport default new HighlightRules()\r\n","/* jslint esversion:6 */\r\nimport * as wrapper from './ace-wrapper'\r\nconst {\r\n  Range,\r\n  BaseFoldMode,\r\n  TokenIterator,\r\n} = wrapper\r\n\r\n// const Range = ace.Range\r\n// const BaseFoldMode = ace.require('ace/mode/folding/fold_mode').FoldMode\r\n// const TokenIterator = ace.require('ace/token_iterator').TokenIterator\r\n\r\nexport default class extends BaseFoldMode {\r\n  constructor () {\r\n    super()\r\n    // regular expressions that identify starting and stopping points\r\n    this.foldingStartMarker = /^\\s*\\/\\/[^-]+$/\r\n    this.foldingStopMarker = /^\\s*--/\r\n\r\n    this.getFoldWidgetRange = (session, _foldStyle, row) => {\r\n      var line = session.getLine(row)\r\n      var matchStart = line.match(this.foldingStartMarker)\r\n      if (matchStart) {\r\n        var position = { row: row, column: line.length }\r\n        var iterator = new TokenIterator(session, position.row, position.column)\r\n        var token = iterator.getCurrentToken()\r\n        var seek = this.foldingStopMarker\r\n\r\n        while (token) {\r\n          if (token.value.match(seek)) {\r\n            const currentRow = iterator.getCurrentTokenRow()\r\n            return Range.fromPoints(position, {\r\n              row: currentRow,\r\n              column: iterator.getCurrentTokenColumn(),\r\n            })\r\n          }\r\n          token = iterator.stepForward()\r\n        }\r\n        // }\r\n      }\r\n      // test each line, and return a range of segments to collapse\r\n      return null\r\n    }\r\n  }\r\n}\r\n","import { TextMode } from './ace-wrapper'\r\n// import { ResParser as Parser } from './engine-wrapper'\r\n// import { rules as Rule } from './engine-wrapper'\r\nimport debounce from './debounce'\r\nimport HighlightRules from './resource_highlight_rules'\r\nimport DefaultFoldMode from './resource_fold'\r\n// const ace = require('ace-builds/src-noconflict/ace')\r\n// const TextMode = ace.require('ace/mode/text').Mode\r\n\r\nconst compile = debounce((editor, parser) => {\r\n  const value = editor.getValue()\r\n  parser.compile(value)\r\n}, 400)\r\n\r\nexport default class extends TextMode {\r\n  constructor (editor, onlyHighlight = false) {\r\n    super()\r\n    this.$highlightRules = this.HighlightRules = HighlightRules\r\n    this.foldingRules = new DefaultFoldMode()\r\n    this.editor = editor\r\n    this.language = editor.session.language\r\n    this.$id = \"ace/mode/res\"\r\n    // If static highlighter, do not watch for changes\r\n    if (!onlyHighlight) this.watch()\r\n  }\r\n\r\n  watch () {\r\n    this.parser = new Parser(this.editor.session.language || 'en')\r\n    // this.parser.on('done', (errors) => {\r\n    // this.editor.session.setAnnotations(errors)\r\n    // })\r\n    this.editor.on('change', debounce(() => {\r\n      // compile(this.editor, this.parser)\r\n      const value = this.editor.getValue()\r\n      try {\r\n        const errors = this.rules.parse(value)\r\n        this.editor.session.setAnnotations(errors)\r\n      } catch (e) {\r\n        // this.editor.session.setAnnotations(errors)\r\n        console.log(e)\r\n      }\r\n    }, 250))\r\n  }\r\n}\r\n","function autoImplementedMode (filename) {\r\n  var ext = filename.split('.').pop()\r\n  var prefix = \"ace/mode/\"\r\n\r\n  if (!ext) {\r\n    return prefix + \"text\"\r\n  }\r\n\r\n  /**\r\n   *  Functional, but inefficient if you want to write it by yourself ....\r\n   */\r\n  switch (ext) {\r\n    case \"js\":\r\n      return prefix + \"javascript\"\r\n    case \"cs\":\r\n      return prefix + \"csharp\"\r\n    case \"php\":\r\n      return prefix + \"php\"\r\n    case \"rb\":\r\n      return prefix + \"ruby\"\r\n    case \"json\":\r\n      return prefix + \"json\"\r\n    default: 'text'\r\n  }\r\n}\r\n\r\n\r\n// var filename = \"myfile.js\"\r\n// In this case \"ace/mode/javascript\"\r\n// var mode = autoImplementedMode(filename)\r\n// editor.getSession().setMode(mode)\r\nexport default autoImplementedMode\r\n","import {\r\n  ace, EditSession, UndoManager, Themes,\r\n} from './ace-wrapper'\r\n\r\nimport Mode from './default_mode'\r\nimport ResourceMode from './resource_mode'\r\nimport dynamicMode from './dynamic-mode'\r\n\r\nclass CodeEditor {\r\n  constructor () {\r\n    if (!CodeEditor.instance) {\r\n      CodeEditor.instance = this\r\n    }\r\n    this.language = 'en'\r\n    this.editors = []\r\n    this.defaults = {\r\n      fontSize: 18,\r\n      fontName: 'Courier New',\r\n      theme: 'ace/theme/tomorrow_night_blue'\r\n    }\r\n    this.theme = this.defaults.theme // 'ace/theme/tomorrow_night_blue'\r\n    this.fontSize = this.defaults.fontSize\r\n    this.fontName = this.defaults.fontName\r\n\r\n    return CodeEditor.instance\r\n  }\r\n \r\n  setHighlightRule (editor, ext) {\r\n    // return this.setHighlightRules(editor, mode)\r\n    let defaultMode = null\r\n    if (ext === '.kbf') {\r\n      defaultMode = new Mode(editor)\r\n    } else if (ext === '.res') {\r\n      defaultMode = new ResourceMode(editor)\r\n    }else {\r\n      defaultMode = dynamicMode(ext)\r\n    }\r\n    editor.session.setMode(defaultMode, () => {\r\n      editor.session.bgTokenizer.start(0)\r\n    })\r\n  }\r\n\r\n  edit (element, options = {}) {\r\n    let el = null\r\n    if (typeof element === 'string') {\r\n      if (document.getElementById(element)) {\r\n        el = document.getElementById(element)\r\n      } else if (document.querySelector(element)) {\r\n        el = document.querySelector(element)\r\n      }\r\n    } else if (element && (element.id || element.tagName)) {\r\n      el = element\r\n    }\r\n    if (!el) {\r\n      console.error('Invalid container reference: ' + el)\r\n      return null\r\n    }\r\n    if (typeof options !== 'object') {\r\n      console.error('Invalid options parameter : ' + options)\r\n      return null\r\n    }\r\n\r\n    let editor = null\r\n    const session = new EditSession(options.text || '')\r\n    session.language = options.language ? options.language : this.language\r\n    session.setUndoManager(new UndoManager())\r\n\r\n    const editorSettings = {\r\n      fontSize: options.fontSize || this.fontSize,\r\n      fontFamily: options.fontName || this.fontName,\r\n      theme: options.theme || this.theme,\r\n      showLineNumbers: true,\r\n      readOnly: false,\r\n      showGutter: true,\r\n      animatedScroll: true,\r\n      minLines: 5,\r\n      maxLines: undefined,\r\n      selectionStyle: 'row',\r\n      highlightActiveLine: true,\r\n      showPrintMargin: true\r\n    }\r\n\r\n    editor = ace.edit(el, Object.assign(editorSettings, options) )\r\n    editor.data = options.data || {}\r\n    editor.setSession(session)\r\n    editor.renderer.setScrollMargin(10, 10, 10, 10);\r\n    editor.$blockScrolling = Infinity\r\n    editor.setOptions({\r\n      scrollPastEnd: 0.9,\r\n      autoScrollEditorIntoView: true,\r\n    })\r\n    editor.focus()\r\n    // editor.select()\r\n    // editor.gotoLine(0)\r\n    // editor.blur(true)\r\n    // this.editor.session.selection.on('changeSelection', function(){});\r\n    // this.editor.session.selection.on('changeCursor', function(){});\r\n    this.setHighlightRule(editor, options.mode)\r\n    this.editors.push(editor)\r\n    setTimeout(() => {\r\n      // let sel = editor.selection\r\n      // sel.clearSelection()\r\n      editor.clearSelection()\r\n    }, 0)\r\n   \r\n    return editor\r\n  }\r\n\r\n  reset () {\r\n    this.FontSize = this.defaults.fontSize\r\n    this.FontName = this.defaults.fontName\r\n    this.Theme = this.defaults.theme\r\n  }\r\n  destroy () {\r\n    this.editors.forEach((editor) => {\r\n      editor.destroy()\r\n    })\r\n  }\r\n  get ThemeList () {\r\n    return Themes\r\n  }\r\n  set Theme (val) {\r\n    if (!val) {\r\n      console.log('Theme not set')\r\n      return\r\n    }\r\n    let theme = (val && val.toLowerCase()) \r\n    if (this.Themes.dark.find((item) => item.toLowerCase() === theme.toLocaleLowerCase()) ||\r\n      this.Themes.light.find((item) => item.toLowerCase() === theme.toLocaleLowerCase())){\r\n      this.theme = 'ace/theme/' + theme.replace(/\\s+/g, '_')\r\n      this.editors.forEach(editor => editor.setTheme(this.theme))\r\n    }\r\n  }\r\n  get Theme () {\r\n    return this.theme\r\n  }\r\n  get FontName () {\r\n    return this.fontName\r\n  }\r\n  set FontName (value) {\r\n    this.fontName = value\r\n  }\r\n  get FontSize () {\r\n    return this.fontSize\r\n  }\r\n  set FontSize (value) {\r\n    this.fontSize = value\r\n  }\r\n  get Editors () {\r\n    return this.editors\r\n  }\r\n}\r\nconst instance = new CodeEditor()\r\nObject.freeze(instance)\r\n\r\n/*  setHighlightRules (editor, language) {\r\n    const lang = language || 'text'\r\n    const session = editor.session\r\n    editor.session.setMode('ace/mode/' + lang, function () {\r\n    const rules = session.$mode.$highlightRules.getRules()\r\n      for (let stateName in rules) {\r\n        if (Object.prototype.hasOwnProperty.call(rules, stateName)) {\r\n          rules[stateName].unshift({\r\n            token: 'keyword',\r\n            regex: /TITLE/,\r\n          }, {\r\n            token: 'constant',\r\n            regex: /GOAL/,\r\n          })\r\n        }\r\n      }\r\n      // console.log(session.$mode)\r\n      // force recreation of tokenizer\r\n      session.$mode.$tokenizer = null\r\n      session.bgTokenizer.setTokenizer(session.$mode.getTokenizer())\r\n      // force re-highlight whole document\r\n      session.bgTokenizer.start(0)\r\n    })\r\n  } */\r\nexport default instance\r\n","/* eslint-disable */\r\nimport AceEditor from './src'\r\nexport default AceEditor\r\n"],"names":["require","TextHighlightRules","ace","BaseFoldMode","FoldMode","TokenIterator","TextMode","Mode","Themes","light","dark","wrapper","HighlightRules","constructor","language","keywords","setLanguage","getRules","start","token","regex","next","split","join","value","found","keywordEntries","find","entry","toLowerCase","RegExp","caseInsensitive","qstring","defaultToken","string","comment","r","Rules","getKeywords","Error","Object","entries","$rules","normalizeRules","Range","fold","en","foldingStartMarker","foldingStopMarker","foldingStopMenu","fr","getFoldWidgetRange","session","_foldStyle","row","lang","line","getLine","matchStart","match","position","column","length","iterator","getCurrentToken","seek","currentRow","getCurrentTokenRow","fromPoints","getCurrentTokenColumn","stepForward","debounce","func","wait","immediate","timeout","context","args","arguments","later","apply","callNow","clearTimeout","setTimeout","editor","watch","lineCommentStart","blockComment","end","$highlightRules","$id","foldingRules","DefaultFoldMode","rules","on","getValue","errors","parse","setAnnotations","e","console","log","onlyHighlight","parser","Parser","autoImplementedMode","filename","ext","pop","prefix","CodeEditor","instance","editors","defaults","fontSize","fontName","theme","setHighlightRule","defaultMode","ResourceMode","dynamicMode","setMode","bgTokenizer","edit","element","options","el","document","getElementById","querySelector","id","tagName","error","EditSession","text","setUndoManager","UndoManager","editorSettings","fontFamily","showLineNumbers","readOnly","showGutter","animatedScroll","minLines","maxLines","undefined","selectionStyle","highlightActiveLine","showPrintMargin","assign","data","setSession","renderer","setScrollMargin","$blockScrolling","Infinity","setOptions","scrollPastEnd","autoScrollEditorIntoView","focus","mode","push","clearSelection","reset","FontSize","FontName","Theme","destroy","forEach","ThemeList","val","item","toLocaleLowerCase","replace","setTheme","Editors","freeze"],"mappings":"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"}